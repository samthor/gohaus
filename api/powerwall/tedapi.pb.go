// Tesla tedapi API Protocol Buffer definition (tedapi.proto)
//
// Create tedapi_pb2.py for use in projects using the protoc compiler:
//     protoc --python_out=. tedapi.proto
//
// Author: Jason A. Cox - Date: 22 Nov 2023 - Version: 1.1
//
// For more information see https://github.com/jasonacox/pypowerwall

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: tools/tedapi/tedapi.proto

package powerwall

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *MessageEnvelope       `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Tail          *Tail                  `protobuf:"bytes,2,opt,name=tail,proto3" json:"tail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetMessage() *MessageEnvelope {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Message) GetTail() *Tail {
	if x != nil {
		return x.Tail
	}
	return nil
}

type MessageEnvelope struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DeliveryChannel int32                  `protobuf:"varint,1,opt,name=deliveryChannel,proto3" json:"deliveryChannel,omitempty"`
	Sender          *Participant           `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient       *Participant           `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Firmware        *FirmwareType          `protobuf:"bytes,4,opt,name=firmware,proto3" json:"firmware,omitempty"`
	Config          *ConfigType            `protobuf:"bytes,15,opt,name=config,proto3,oneof" json:"config,omitempty"`
	Payload         *QueryType             `protobuf:"bytes,16,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MessageEnvelope) Reset() {
	*x = MessageEnvelope{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEnvelope) ProtoMessage() {}

func (x *MessageEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEnvelope.ProtoReflect.Descriptor instead.
func (*MessageEnvelope) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{1}
}

func (x *MessageEnvelope) GetDeliveryChannel() int32 {
	if x != nil {
		return x.DeliveryChannel
	}
	return 0
}

func (x *MessageEnvelope) GetSender() *Participant {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *MessageEnvelope) GetRecipient() *Participant {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *MessageEnvelope) GetFirmware() *FirmwareType {
	if x != nil {
		return x.Firmware
	}
	return nil
}

func (x *MessageEnvelope) GetConfig() *ConfigType {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *MessageEnvelope) GetPayload() *QueryType {
	if x != nil {
		return x.Payload
	}
	return nil
}

type Participant struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Id:
	//
	//	*Participant_Din
	//	*Participant_TeslaService
	//	*Participant_Local
	//	*Participant_AuthorizedClient
	Id            isParticipant_Id `protobuf_oneof:"id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Participant) Reset() {
	*x = Participant{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{2}
}

func (x *Participant) GetId() isParticipant_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Participant) GetDin() string {
	if x != nil {
		if x, ok := x.Id.(*Participant_Din); ok {
			return x.Din
		}
	}
	return ""
}

func (x *Participant) GetTeslaService() int32 {
	if x != nil {
		if x, ok := x.Id.(*Participant_TeslaService); ok {
			return x.TeslaService
		}
	}
	return 0
}

func (x *Participant) GetLocal() int32 {
	if x != nil {
		if x, ok := x.Id.(*Participant_Local); ok {
			return x.Local
		}
	}
	return 0
}

func (x *Participant) GetAuthorizedClient() int32 {
	if x != nil {
		if x, ok := x.Id.(*Participant_AuthorizedClient); ok {
			return x.AuthorizedClient
		}
	}
	return 0
}

type isParticipant_Id interface {
	isParticipant_Id()
}

type Participant_Din struct {
	Din string `protobuf:"bytes,1,opt,name=din,proto3,oneof"`
}

type Participant_TeslaService struct {
	TeslaService int32 `protobuf:"varint,2,opt,name=teslaService,proto3,oneof"`
}

type Participant_Local struct {
	Local int32 `protobuf:"varint,3,opt,name=local,proto3,oneof"`
}

type Participant_AuthorizedClient struct {
	AuthorizedClient int32 `protobuf:"varint,4,opt,name=authorizedClient,proto3,oneof"`
}

func (*Participant_Din) isParticipant_Id() {}

func (*Participant_TeslaService) isParticipant_Id() {}

func (*Participant_Local) isParticipant_Id() {}

func (*Participant_AuthorizedClient) isParticipant_Id() {}

type Tail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int32                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tail) Reset() {
	*x = Tail{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tail) ProtoMessage() {}

func (x *Tail) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tail.ProtoReflect.Descriptor instead.
func (*Tail) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{3}
}

func (x *Tail) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type FirmwareType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Id:
	//
	//	*FirmwareType_Request
	//	*FirmwareType_System
	Id            isFirmwareType_Id `protobuf_oneof:"id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirmwareType) Reset() {
	*x = FirmwareType{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirmwareType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirmwareType) ProtoMessage() {}

func (x *FirmwareType) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirmwareType.ProtoReflect.Descriptor instead.
func (*FirmwareType) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{4}
}

func (x *FirmwareType) GetId() isFirmwareType_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FirmwareType) GetRequest() string {
	if x != nil {
		if x, ok := x.Id.(*FirmwareType_Request); ok {
			return x.Request
		}
	}
	return ""
}

func (x *FirmwareType) GetSystem() *FirmwarePayload {
	if x != nil {
		if x, ok := x.Id.(*FirmwareType_System); ok {
			return x.System
		}
	}
	return nil
}

type isFirmwareType_Id interface {
	isFirmwareType_Id()
}

type FirmwareType_Request struct {
	Request string `protobuf:"bytes,2,opt,name=request,proto3,oneof"`
}

type FirmwareType_System struct {
	System *FirmwarePayload `protobuf:"bytes,3,opt,name=system,proto3,oneof"`
}

func (*FirmwareType_Request) isFirmwareType_Id() {}

func (*FirmwareType_System) isFirmwareType_Id() {}

type FirmwarePayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gateway       *EcuId                 `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Din           string                 `protobuf:"bytes,2,opt,name=din,proto3" json:"din,omitempty"`
	Version       *FirmwareVersion       `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Five          *FirmwareFive          `protobuf:"bytes,5,opt,name=five,proto3" json:"five,omitempty"`
	Six           int32                  `protobuf:"varint,6,opt,name=six,proto3" json:"six,omitempty"`
	Wireless      *DeviceArray           `protobuf:"bytes,7,opt,name=wireless,proto3" json:"wireless,omitempty"`
	Field8        []byte                 `protobuf:"bytes,8,opt,name=field8,proto3" json:"field8,omitempty"`
	Field9        []byte                 `protobuf:"bytes,9,opt,name=field9,proto3" json:"field9,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirmwarePayload) Reset() {
	*x = FirmwarePayload{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirmwarePayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirmwarePayload) ProtoMessage() {}

func (x *FirmwarePayload) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirmwarePayload.ProtoReflect.Descriptor instead.
func (*FirmwarePayload) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{5}
}

func (x *FirmwarePayload) GetGateway() *EcuId {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *FirmwarePayload) GetDin() string {
	if x != nil {
		return x.Din
	}
	return ""
}

func (x *FirmwarePayload) GetVersion() *FirmwareVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *FirmwarePayload) GetFive() *FirmwareFive {
	if x != nil {
		return x.Five
	}
	return nil
}

func (x *FirmwarePayload) GetSix() int32 {
	if x != nil {
		return x.Six
	}
	return 0
}

func (x *FirmwarePayload) GetWireless() *DeviceArray {
	if x != nil {
		return x.Wireless
	}
	return nil
}

func (x *FirmwarePayload) GetField8() []byte {
	if x != nil {
		return x.Field8
	}
	return nil
}

func (x *FirmwarePayload) GetField9() []byte {
	if x != nil {
		return x.Field9
	}
	return nil
}

type EcuId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartNumber    string                 `protobuf:"bytes,1,opt,name=partNumber,proto3" json:"partNumber,omitempty"`
	SerialNumber  string                 `protobuf:"bytes,2,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EcuId) Reset() {
	*x = EcuId{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EcuId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcuId) ProtoMessage() {}

func (x *EcuId) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcuId.ProtoReflect.Descriptor instead.
func (*EcuId) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{6}
}

func (x *EcuId) GetPartNumber() string {
	if x != nil {
		return x.PartNumber
	}
	return ""
}

func (x *EcuId) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

type FirmwareVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Githash       []byte                 `protobuf:"bytes,2,opt,name=githash,proto3" json:"githash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirmwareVersion) Reset() {
	*x = FirmwareVersion{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirmwareVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirmwareVersion) ProtoMessage() {}

func (x *FirmwareVersion) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirmwareVersion.ProtoReflect.Descriptor instead.
func (*FirmwareVersion) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{7}
}

func (x *FirmwareVersion) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *FirmwareVersion) GetGithash() []byte {
	if x != nil {
		return x.Githash
	}
	return nil
}

type FirmwareFive struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	D             int32                  `protobuf:"varint,2,opt,name=d,proto3" json:"d,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirmwareFive) Reset() {
	*x = FirmwareFive{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirmwareFive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirmwareFive) ProtoMessage() {}

func (x *FirmwareFive) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirmwareFive.ProtoReflect.Descriptor instead.
func (*FirmwareFive) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{8}
}

func (x *FirmwareFive) GetD() int32 {
	if x != nil {
		return x.D
	}
	return 0
}

type DeviceArray struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Device        []*DeviceInfo          `protobuf:"bytes,1,rep,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceArray) Reset() {
	*x = DeviceArray{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceArray) ProtoMessage() {}

func (x *DeviceArray) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceArray.ProtoReflect.Descriptor instead.
func (*DeviceArray) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{9}
}

func (x *DeviceArray) GetDevice() []*DeviceInfo {
	if x != nil {
		return x.Device
	}
	return nil
}

type DeviceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Company       *StringValue           `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	Model         *StringValue           `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	FccId         *StringValue           `protobuf:"bytes,3,opt,name=fcc_id,json=fccId,proto3" json:"fcc_id,omitempty"`
	Ic            *StringValue           `protobuf:"bytes,4,opt,name=ic,proto3" json:"ic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{10}
}

func (x *DeviceInfo) GetCompany() *StringValue {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *DeviceInfo) GetModel() *StringValue {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *DeviceInfo) GetFccId() *StringValue {
	if x != nil {
		return x.FccId
	}
	return nil
}

func (x *DeviceInfo) GetIc() *StringValue {
	if x != nil {
		return x.Ic
	}
	return nil
}

type QueryType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Send          *PayloadQuerySend      `protobuf:"bytes,1,opt,name=send,proto3,oneof" json:"send,omitempty"`
	Recv          *PayloadString         `protobuf:"bytes,2,opt,name=recv,proto3,oneof" json:"recv,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryType) Reset() {
	*x = QueryType{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryType) ProtoMessage() {}

func (x *QueryType) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryType.ProtoReflect.Descriptor instead.
func (*QueryType) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{11}
}

func (x *QueryType) GetSend() *PayloadQuerySend {
	if x != nil {
		return x.Send
	}
	return nil
}

func (x *QueryType) GetRecv() *PayloadString {
	if x != nil {
		return x.Recv
	}
	return nil
}

type PayloadQuerySend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Num           *int32                 `protobuf:"varint,1,opt,name=num,proto3,oneof" json:"num,omitempty"`
	Payload       *PayloadString         `protobuf:"bytes,2,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
	Code          []byte                 `protobuf:"bytes,3,opt,name=code,proto3,oneof" json:"code,omitempty"`
	B             *StringValue           `protobuf:"bytes,4,opt,name=b,proto3,oneof" json:"b,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadQuerySend) Reset() {
	*x = PayloadQuerySend{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadQuerySend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadQuerySend) ProtoMessage() {}

func (x *PayloadQuerySend) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadQuerySend.ProtoReflect.Descriptor instead.
func (*PayloadQuerySend) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{12}
}

func (x *PayloadQuerySend) GetNum() int32 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

func (x *PayloadQuerySend) GetPayload() *PayloadString {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *PayloadQuerySend) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *PayloadQuerySend) GetB() *StringValue {
	if x != nil {
		return x.B
	}
	return nil
}

type ConfigType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Config:
	//
	//	*ConfigType_Send
	//	*ConfigType_Recv
	Config        isConfigType_Config `protobuf_oneof:"config"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigType) Reset() {
	*x = ConfigType{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigType) ProtoMessage() {}

func (x *ConfigType) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigType.ProtoReflect.Descriptor instead.
func (*ConfigType) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{13}
}

func (x *ConfigType) GetConfig() isConfigType_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConfigType) GetSend() *PayloadConfigSend {
	if x != nil {
		if x, ok := x.Config.(*ConfigType_Send); ok {
			return x.Send
		}
	}
	return nil
}

func (x *ConfigType) GetRecv() *PayloadConfigRecv {
	if x != nil {
		if x, ok := x.Config.(*ConfigType_Recv); ok {
			return x.Recv
		}
	}
	return nil
}

type isConfigType_Config interface {
	isConfigType_Config()
}

type ConfigType_Send struct {
	Send *PayloadConfigSend `protobuf:"bytes,1,opt,name=send,proto3,oneof"`
}

type ConfigType_Recv struct {
	Recv *PayloadConfigRecv `protobuf:"bytes,2,opt,name=recv,proto3,oneof"`
}

func (*ConfigType_Send) isConfigType_Config() {}

func (*ConfigType_Recv) isConfigType_Config() {}

type PayloadConfigSend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Num           int32                  `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	File          string                 `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadConfigSend) Reset() {
	*x = PayloadConfigSend{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadConfigSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadConfigSend) ProtoMessage() {}

func (x *PayloadConfigSend) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadConfigSend.ProtoReflect.Descriptor instead.
func (*PayloadConfigSend) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{14}
}

func (x *PayloadConfigSend) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *PayloadConfigSend) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

type PayloadConfigRecv struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *ConfigString          `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Code          []byte                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadConfigRecv) Reset() {
	*x = PayloadConfigRecv{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadConfigRecv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadConfigRecv) ProtoMessage() {}

func (x *PayloadConfigRecv) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadConfigRecv.ProtoReflect.Descriptor instead.
func (*PayloadConfigRecv) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{15}
}

func (x *PayloadConfigRecv) GetFile() *ConfigString {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *PayloadConfigRecv) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

type ConfigString struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Text          string                 `protobuf:"bytes,100,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigString) Reset() {
	*x = ConfigString{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigString) ProtoMessage() {}

func (x *ConfigString) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigString.ProtoReflect.Descriptor instead.
func (*ConfigString) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{16}
}

func (x *ConfigString) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigString) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type PayloadString struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int32                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadString) Reset() {
	*x = PayloadString{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadString) ProtoMessage() {}

func (x *PayloadString) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadString.ProtoReflect.Descriptor instead.
func (*PayloadString) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{17}
}

func (x *PayloadString) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *PayloadString) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type StringValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringValue) Reset() {
	*x = StringValue{}
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringValue) ProtoMessage() {}

func (x *StringValue) ProtoReflect() protoreflect.Message {
	mi := &file_tools_tedapi_tedapi_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringValue.ProtoReflect.Descriptor instead.
func (*StringValue) Descriptor() ([]byte, []int) {
	return file_tools_tedapi_tedapi_proto_rawDescGZIP(), []int{18}
}

func (x *StringValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_tools_tedapi_tedapi_proto protoreflect.FileDescriptor

const file_tools_tedapi_tedapi_proto_rawDesc = "" +
	"\n" +
	"\x19tools/tedapi/tedapi.proto\x12\x06tedapi\"^\n" +
	"\aMessage\x121\n" +
	"\amessage\x18\x01 \x01(\v2\x17.tedapi.MessageEnvelopeR\amessage\x12 \n" +
	"\x04tail\x18\x02 \x01(\v2\f.tedapi.TailR\x04tail\"\xc7\x02\n" +
	"\x0fMessageEnvelope\x12(\n" +
	"\x0fdeliveryChannel\x18\x01 \x01(\x05R\x0fdeliveryChannel\x12+\n" +
	"\x06sender\x18\x02 \x01(\v2\x13.tedapi.ParticipantR\x06sender\x121\n" +
	"\trecipient\x18\x03 \x01(\v2\x13.tedapi.ParticipantR\trecipient\x120\n" +
	"\bfirmware\x18\x04 \x01(\v2\x14.tedapi.FirmwareTypeR\bfirmware\x12/\n" +
	"\x06config\x18\x0f \x01(\v2\x12.tedapi.ConfigTypeH\x00R\x06config\x88\x01\x01\x120\n" +
	"\apayload\x18\x10 \x01(\v2\x11.tedapi.QueryTypeH\x01R\apayload\x88\x01\x01B\t\n" +
	"\a_configB\n" +
	"\n" +
	"\b_payload\"\x93\x01\n" +
	"\vParticipant\x12\x12\n" +
	"\x03din\x18\x01 \x01(\tH\x00R\x03din\x12$\n" +
	"\fteslaService\x18\x02 \x01(\x05H\x00R\fteslaService\x12\x16\n" +
	"\x05local\x18\x03 \x01(\x05H\x00R\x05local\x12,\n" +
	"\x10authorizedClient\x18\x04 \x01(\x05H\x00R\x10authorizedClientB\x04\n" +
	"\x02id\"\x1c\n" +
	"\x04Tail\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x05R\x05value\"c\n" +
	"\fFirmwareType\x12\x1a\n" +
	"\arequest\x18\x02 \x01(\tH\x00R\arequest\x121\n" +
	"\x06system\x18\x03 \x01(\v2\x17.tedapi.FirmwarePayloadH\x00R\x06systemB\x04\n" +
	"\x02id\"\x9c\x02\n" +
	"\x0fFirmwarePayload\x12'\n" +
	"\agateway\x18\x01 \x01(\v2\r.tedapi.EcuIdR\agateway\x12\x10\n" +
	"\x03din\x18\x02 \x01(\tR\x03din\x121\n" +
	"\aversion\x18\x03 \x01(\v2\x17.tedapi.FirmwareVersionR\aversion\x12(\n" +
	"\x04five\x18\x05 \x01(\v2\x14.tedapi.FirmwareFiveR\x04five\x12\x10\n" +
	"\x03six\x18\x06 \x01(\x05R\x03six\x12/\n" +
	"\bwireless\x18\a \x01(\v2\x13.tedapi.DeviceArrayR\bwireless\x12\x16\n" +
	"\x06field8\x18\b \x01(\fR\x06field8\x12\x16\n" +
	"\x06field9\x18\t \x01(\fR\x06field9\"K\n" +
	"\x05EcuId\x12\x1e\n" +
	"\n" +
	"partNumber\x18\x01 \x01(\tR\n" +
	"partNumber\x12\"\n" +
	"\fserialNumber\x18\x02 \x01(\tR\fserialNumber\"?\n" +
	"\x0fFirmwareVersion\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x18\n" +
	"\agithash\x18\x02 \x01(\fR\agithash\"\x1c\n" +
	"\fFirmwareFive\x12\f\n" +
	"\x01d\x18\x02 \x01(\x05R\x01d\"9\n" +
	"\vDeviceArray\x12*\n" +
	"\x06device\x18\x01 \x03(\v2\x12.tedapi.DeviceInfoR\x06device\"\xb7\x01\n" +
	"\n" +
	"DeviceInfo\x12-\n" +
	"\acompany\x18\x01 \x01(\v2\x13.tedapi.StringValueR\acompany\x12)\n" +
	"\x05model\x18\x02 \x01(\v2\x13.tedapi.StringValueR\x05model\x12*\n" +
	"\x06fcc_id\x18\x03 \x01(\v2\x13.tedapi.StringValueR\x05fccId\x12#\n" +
	"\x02ic\x18\x04 \x01(\v2\x13.tedapi.StringValueR\x02ic\"\x80\x01\n" +
	"\tQueryType\x121\n" +
	"\x04send\x18\x01 \x01(\v2\x18.tedapi.PayloadQuerySendH\x00R\x04send\x88\x01\x01\x12.\n" +
	"\x04recv\x18\x02 \x01(\v2\x15.tedapi.PayloadStringH\x01R\x04recv\x88\x01\x01B\a\n" +
	"\x05_sendB\a\n" +
	"\x05_recv\"\xc3\x01\n" +
	"\x10PayloadQuerySend\x12\x15\n" +
	"\x03num\x18\x01 \x01(\x05H\x00R\x03num\x88\x01\x01\x124\n" +
	"\apayload\x18\x02 \x01(\v2\x15.tedapi.PayloadStringH\x01R\apayload\x88\x01\x01\x12\x17\n" +
	"\x04code\x18\x03 \x01(\fH\x02R\x04code\x88\x01\x01\x12&\n" +
	"\x01b\x18\x04 \x01(\v2\x13.tedapi.StringValueH\x03R\x01b\x88\x01\x01B\x06\n" +
	"\x04_numB\n" +
	"\n" +
	"\b_payloadB\a\n" +
	"\x05_codeB\x04\n" +
	"\x02_b\"x\n" +
	"\n" +
	"ConfigType\x12/\n" +
	"\x04send\x18\x01 \x01(\v2\x19.tedapi.PayloadConfigSendH\x00R\x04send\x12/\n" +
	"\x04recv\x18\x02 \x01(\v2\x19.tedapi.PayloadConfigRecvH\x00R\x04recvB\b\n" +
	"\x06config\"9\n" +
	"\x11PayloadConfigSend\x12\x10\n" +
	"\x03num\x18\x01 \x01(\x05R\x03num\x12\x12\n" +
	"\x04file\x18\x02 \x01(\tR\x04file\"Q\n" +
	"\x11PayloadConfigRecv\x12(\n" +
	"\x04file\x18\x01 \x01(\v2\x14.tedapi.ConfigStringR\x04file\x12\x12\n" +
	"\x04code\x18\x02 \x01(\fR\x04code\"6\n" +
	"\fConfigString\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04text\x18d \x01(\tR\x04text\"9\n" +
	"\rPayloadString\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x05R\x05value\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"#\n" +
	"\vStringValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05valueb\x06proto3"

var (
	file_tools_tedapi_tedapi_proto_rawDescOnce sync.Once
	file_tools_tedapi_tedapi_proto_rawDescData []byte
)

func file_tools_tedapi_tedapi_proto_rawDescGZIP() []byte {
	file_tools_tedapi_tedapi_proto_rawDescOnce.Do(func() {
		file_tools_tedapi_tedapi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tools_tedapi_tedapi_proto_rawDesc), len(file_tools_tedapi_tedapi_proto_rawDesc)))
	})
	return file_tools_tedapi_tedapi_proto_rawDescData
}

var file_tools_tedapi_tedapi_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_tools_tedapi_tedapi_proto_goTypes = []any{
	(*Message)(nil),           // 0: tedapi.Message
	(*MessageEnvelope)(nil),   // 1: tedapi.MessageEnvelope
	(*Participant)(nil),       // 2: tedapi.Participant
	(*Tail)(nil),              // 3: tedapi.Tail
	(*FirmwareType)(nil),      // 4: tedapi.FirmwareType
	(*FirmwarePayload)(nil),   // 5: tedapi.FirmwarePayload
	(*EcuId)(nil),             // 6: tedapi.EcuId
	(*FirmwareVersion)(nil),   // 7: tedapi.FirmwareVersion
	(*FirmwareFive)(nil),      // 8: tedapi.FirmwareFive
	(*DeviceArray)(nil),       // 9: tedapi.DeviceArray
	(*DeviceInfo)(nil),        // 10: tedapi.DeviceInfo
	(*QueryType)(nil),         // 11: tedapi.QueryType
	(*PayloadQuerySend)(nil),  // 12: tedapi.PayloadQuerySend
	(*ConfigType)(nil),        // 13: tedapi.ConfigType
	(*PayloadConfigSend)(nil), // 14: tedapi.PayloadConfigSend
	(*PayloadConfigRecv)(nil), // 15: tedapi.PayloadConfigRecv
	(*ConfigString)(nil),      // 16: tedapi.ConfigString
	(*PayloadString)(nil),     // 17: tedapi.PayloadString
	(*StringValue)(nil),       // 18: tedapi.StringValue
}
var file_tools_tedapi_tedapi_proto_depIdxs = []int32{
	1,  // 0: tedapi.Message.message:type_name -> tedapi.MessageEnvelope
	3,  // 1: tedapi.Message.tail:type_name -> tedapi.Tail
	2,  // 2: tedapi.MessageEnvelope.sender:type_name -> tedapi.Participant
	2,  // 3: tedapi.MessageEnvelope.recipient:type_name -> tedapi.Participant
	4,  // 4: tedapi.MessageEnvelope.firmware:type_name -> tedapi.FirmwareType
	13, // 5: tedapi.MessageEnvelope.config:type_name -> tedapi.ConfigType
	11, // 6: tedapi.MessageEnvelope.payload:type_name -> tedapi.QueryType
	5,  // 7: tedapi.FirmwareType.system:type_name -> tedapi.FirmwarePayload
	6,  // 8: tedapi.FirmwarePayload.gateway:type_name -> tedapi.EcuId
	7,  // 9: tedapi.FirmwarePayload.version:type_name -> tedapi.FirmwareVersion
	8,  // 10: tedapi.FirmwarePayload.five:type_name -> tedapi.FirmwareFive
	9,  // 11: tedapi.FirmwarePayload.wireless:type_name -> tedapi.DeviceArray
	10, // 12: tedapi.DeviceArray.device:type_name -> tedapi.DeviceInfo
	18, // 13: tedapi.DeviceInfo.company:type_name -> tedapi.StringValue
	18, // 14: tedapi.DeviceInfo.model:type_name -> tedapi.StringValue
	18, // 15: tedapi.DeviceInfo.fcc_id:type_name -> tedapi.StringValue
	18, // 16: tedapi.DeviceInfo.ic:type_name -> tedapi.StringValue
	12, // 17: tedapi.QueryType.send:type_name -> tedapi.PayloadQuerySend
	17, // 18: tedapi.QueryType.recv:type_name -> tedapi.PayloadString
	17, // 19: tedapi.PayloadQuerySend.payload:type_name -> tedapi.PayloadString
	18, // 20: tedapi.PayloadQuerySend.b:type_name -> tedapi.StringValue
	14, // 21: tedapi.ConfigType.send:type_name -> tedapi.PayloadConfigSend
	15, // 22: tedapi.ConfigType.recv:type_name -> tedapi.PayloadConfigRecv
	16, // 23: tedapi.PayloadConfigRecv.file:type_name -> tedapi.ConfigString
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_tools_tedapi_tedapi_proto_init() }
func file_tools_tedapi_tedapi_proto_init() {
	if File_tools_tedapi_tedapi_proto != nil {
		return
	}
	file_tools_tedapi_tedapi_proto_msgTypes[1].OneofWrappers = []any{}
	file_tools_tedapi_tedapi_proto_msgTypes[2].OneofWrappers = []any{
		(*Participant_Din)(nil),
		(*Participant_TeslaService)(nil),
		(*Participant_Local)(nil),
		(*Participant_AuthorizedClient)(nil),
	}
	file_tools_tedapi_tedapi_proto_msgTypes[4].OneofWrappers = []any{
		(*FirmwareType_Request)(nil),
		(*FirmwareType_System)(nil),
	}
	file_tools_tedapi_tedapi_proto_msgTypes[11].OneofWrappers = []any{}
	file_tools_tedapi_tedapi_proto_msgTypes[12].OneofWrappers = []any{}
	file_tools_tedapi_tedapi_proto_msgTypes[13].OneofWrappers = []any{
		(*ConfigType_Send)(nil),
		(*ConfigType_Recv)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tools_tedapi_tedapi_proto_rawDesc), len(file_tools_tedapi_tedapi_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tools_tedapi_tedapi_proto_goTypes,
		DependencyIndexes: file_tools_tedapi_tedapi_proto_depIdxs,
		MessageInfos:      file_tools_tedapi_tedapi_proto_msgTypes,
	}.Build()
	File_tools_tedapi_tedapi_proto = out.File
	file_tools_tedapi_tedapi_proto_goTypes = nil
	file_tools_tedapi_tedapi_proto_depIdxs = nil
}
